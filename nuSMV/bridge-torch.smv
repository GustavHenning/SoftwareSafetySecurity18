MODULE main
VAR
  location : array 0..3 of boolean;
  traveling: array 0..3 of boolean;
  torch: boolean;
  time: 0..100;

ASSIGN
  init (location[0]) := FALSE;
  init (location[1]) := FALSE;
  init (location[2]) := FALSE;
  init (location[3]) := FALSE;
  init (torch) := FALSE;
  init (time) := 0;

  next (torch) := case
    -- rule: torch can only move if carried
    		traveling[0] & torch = location[0] : !torch;
		traveling[1] & torch = location[1] : !torch;
		traveling[2] & torch = location[2] : !torch;
		traveling[3] & torch = location[3] : !torch;
		TRUE: torch;
  esac;

  next (location[0]) := case
    -- rule: location changes if "0" is traveling
		traveling[0] & torch = location[0] : !location[0];
		TRUE: location[0];
  esac;

  next (location[1]) := case
    -- copy rule from above and change index
		traveling[1] & torch = location[1] : !location[1];
		TRUE: location[1];
  esac;

  next (location[2]) := case
		traveling[2] & torch = location[2] : !location[2];
		TRUE: location[2];
  esac;

  next (location[3]) := case
		traveling[3] & torch = location[3] : !location[3];
		TRUE: location[3];
  esac;

  next(time) := case
    	time > 90: 90;
	traveling[0] & location[0] != next(location[0]) & location[1] = next(location[1]) & location[2] = next(location[2]) & location[3] = next(location[3]) : time + 1;
	traveling[1] & location[1] != next(location[1]) & location[2] = next(location[2]) & location[3] = next(location[3]) : time + 2;
	traveling[2] & location[2] != next(location[2]) & location[3] = next(location[3]) : time + 5;
	traveling[3] & location[3] != next(location[3]): time + 10;
	TRUE: time;
  esac;


LTLSPEC

  !((torch != next(torch) -> count(location[0] != next(location[0]), location[1] != next(location[1]), location[2] != next(location[2]), location[3] != next(location[3])) <= 2 & count(location[0] != next(location[0]), location[1] != next(location[1]), location[2] != next(location[2]), location[3] != next(location[3])) > 0)
     U (location[0] & location[1] & location[2] & location[3] & time <= 17));


/-- ERROR TRACE
The optimal time is 17min, because if we change the specification of time to time <= 16 NuSMV tells us itâ€™s true.


-- specification !((torch != next(torch) -> (count(location[0] != next(location[0]), location[1] != next(location[1]), location[2] != next(location[2]), location[3] != next(location[3])) <= 2 & count(location[0] != next(location[0]), location[1] != next(location[1]), location[2] != next(location[2]), location[3] != next(location[3])) > 0)) U ((((location[0] & location[1]) & location[2]) & location[3]) & time <= 17))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    location[3] = FALSE
    traveling[0] = TRUE
    traveling[1] = TRUE
    traveling[2] = FALSE
    traveling[3] = FALSE
    torch = FALSE
    time = 0
  -> State: 1.2 <-
    location[0] = TRUE
    location[1] = TRUE
    traveling[0] = FALSE
    torch = TRUE
    time = 2
  -> State: 1.3 <-
    location[1] = FALSE
    traveling[1] = FALSE
    traveling[2] = TRUE
    traveling[3] = TRUE
    torch = FALSE
    time = 4
  -> State: 1.4 <-
    location[2] = TRUE
    location[3] = TRUE
    traveling[0] = TRUE
    traveling[2] = FALSE
    traveling[3] = FALSE
    torch = TRUE
    time = 14
  -> State: 1.5 <-
    location[0] = FALSE
    traveling[1] = TRUE
    torch = FALSE
    time = 15
  -> State: 1.6 <-
    location[0] = TRUE
    location[1] = TRUE
    traveling[2] = TRUE
    torch = TRUE
    time = 17
  -> State: 1.7 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 22
  -> State: 1.8 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 27
  -> State: 1.9 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 32
  -> State: 1.10 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 37
  -> State: 1.11 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 42
  -> State: 1.12 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 47
  -> State: 1.13 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 52
  -> State: 1.14 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 57
  -> State: 1.15 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 62
  -> State: 1.16 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 67
  -> State: 1.17 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 72
  -> State: 1.18 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 77
  -> State: 1.19 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 82
  -> State: 1.20 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    torch = TRUE
    time = 87
  -- Loop starts here
  -> State: 1.21 <-
    location[0] = FALSE
    location[1] = FALSE
    location[2] = FALSE
    torch = FALSE
    time = 92
  -> State: 1.22 <-
    location[0] = TRUE
    location[1] = TRUE
    location[2] = TRUE
    traveling[0] = FALSE
    traveling[1] = FALSE
    traveling[3] = TRUE
    torch = TRUE
    time = 90
  -> State: 1.23 <-
    location[2] = FALSE
    location[3] = FALSE
    traveling[2] = FALSE
    torch = FALSE
    time = 100
  -> State: 1.24 <-
    location[3] = TRUE
    traveling[0] = TRUE
    traveling[1] = TRUE
    traveling[3] = FALSE
    torch = TRUE
    time = 90
  -> State: 1.25 <-
    location[0] = FALSE
    location[1] = FALSE
    traveling[2] = TRUE
    torch = FALSE
    time = 92

From state 1.1 to 1.6 this is the optimal way to travel, at state 1.6 everybody is on the other side of the bridge. After that, it allows wrong moves (3 people are travelling)
--/
